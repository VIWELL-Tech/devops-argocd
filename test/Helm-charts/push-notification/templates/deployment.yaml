apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.name }}
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  revisionHistoryLimit: 2
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      labels:
        app: {{ .Values.name }}
        version: "{{ .Values.AppVersion }}"
    spec:
      containers: 
      - envFrom:
        - configMapRef:
            name: {{ .Values.name }}
        - secretRef:
            name: {{ .Values.name }}
        - secretRef:
             name: common      
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: ["node"]
        args: ["/app/dist/push-notification/main.js"]
        imagePullPolicy: {{ .Values.image.pullPolicy }}
       
        name: {{ .Values.name }}
        ports:
        - containerPort: 30020
          protocol: TCP
        
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}

